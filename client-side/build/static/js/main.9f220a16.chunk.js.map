{"version":3,"sources":["components/Product.component.js","components/ProductsList.component.js","App.js","index.js"],"names":["Product","props","useState","product","setproduct","useEffect","className","dept","name","price","color","baseURL","process","ProductList","state","products","depts","colors","hasPriceFilter","hasDeptFilter","hasColorFilter","handlePriceChange","bind","handleDeptChange","handleColorChange","handleSubmit","clearFilters","axios","get","then","res","setState","data","map","item","prevState","filter","i","indexOf","sort","catch","err","console","error","event","target","value","this","preventDefault","length","onSubmit","type","checked","onChange","selected","disabled","hidden","onClick","id","match","Number","key","_id","Component","App","path","exact","component","ProductsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f220a16.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Product = (props) => {\r\n    const [product, setproduct] = useState({});\r\n\r\n    useEffect(() => {\r\n        setproduct(props.product);\r\n    }, [props.product]);\r\n\r\n    return (\r\n        <div className=\"card product\">\r\n            <div className=\"card-header\">{product.dept}</div>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{product.name}</h5>\r\n                <h6 className=\"card-subtitle text-muted\">â‚¹{product.price}</h6>\r\n                <p className=\"card-text\">{product.color}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import React, { Component } from \"react\";\r\nimport Product from \"./Product.component\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = process.env.baseURL || \"http://localhost:5000\";\r\n\r\nclass ProductList extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            products: [],\r\n            depts: [],\r\n            colors: [],\r\n            price: \"\",\r\n            color: \"\",\r\n            dept: \"\",\r\n            hasPriceFilter: false,\r\n            hasDeptFilter: false,\r\n            hasColorFilter: false,\r\n        };\r\n        this.handlePriceChange = this.handlePriceChange.bind(this);\r\n        this.handleDeptChange = this.handleDeptChange.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.clearFilters = this.clearFilters.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get(`${baseURL}/products`)\r\n            .then((res) => this.setState({ products: res.data }))\r\n            .then(() => {\r\n                this.state.products.map((item) =>\r\n                    this.setState((prevState) => ({\r\n                        depts: [...prevState.depts, item.dept],\r\n                    }))\r\n                );\r\n\r\n                this.setState((prevState) => ({\r\n                    depts: prevState.depts.filter(\r\n                        (item, i) => prevState.depts.indexOf(item) === i\r\n                    ),\r\n                }));\r\n\r\n                this.setState((prevState) => ({\r\n                    depts: prevState.depts.sort(),\r\n                }));\r\n            })\r\n            .then(() => {\r\n                this.state.products.map((item) =>\r\n                    this.setState((prevState) => ({\r\n                        colors: [...prevState.colors, item.color],\r\n                    }))\r\n                );\r\n\r\n                this.setState((prevState) => ({\r\n                    colors: prevState.colors.filter(\r\n                        (item, i) => prevState.colors.indexOf(item) === i\r\n                    ),\r\n                }));\r\n\r\n                this.setState((prevState) => ({\r\n                    colors: prevState.colors.sort(),\r\n                }));\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    handlePriceChange(event) {\r\n        const { name, value } = event.target;\r\n        value === \"clear\"\r\n            ? this.setState({ hasPriceFilter: false })\r\n            : this.setState({ hasPriceFilter: true });\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleDeptChange(event) {\r\n        const { name, value } = event.target;\r\n        value === \"clear\"\r\n            ? this.setState({ hasDeptFilter: false })\r\n            : this.setState({ hasDeptFilter: true });\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleColorChange(event) {\r\n        const { name, value } = event.target;\r\n        value === \"clear\"\r\n            ? this.setState({ hasColorFilter: false })\r\n            : this.setState({ hasColorFilter: true });\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    clearFilters() {\r\n        this.setState({\r\n            hasPriceFilter: false,\r\n            hasDeptFilter: false,\r\n            hasColorFilter: false,\r\n            color: \"\",\r\n            price: \"\",\r\n            dept: \"\",\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.products.length) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            {/* All price filter options */}\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    name=\"price\"\r\n                                    type=\"radio\"\r\n                                    value=\"0 - 500\"\r\n                                    checked={this.state.price === \"0 - 500\"}\r\n                                    onChange={this.handlePriceChange}\r\n                                />\r\n                                <label className=\"form-check-label\">\r\n                                    â‚¹0 - â‚¹500\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    name=\"price\"\r\n                                    type=\"radio\"\r\n                                    value=\"501 - 2000\"\r\n                                    checked={this.state.price === \"501 - 2000\"}\r\n                                    onChange={this.handlePriceChange}\r\n                                />\r\n                                <label className=\"form-check-label\">\r\n                                    â‚¹501 - â‚¹2000\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    name=\"price\"\r\n                                    type=\"radio\"\r\n                                    value=\"2001 - 5000\"\r\n                                    checked={this.state.price === \"2001 - 5000\"}\r\n                                    onChange={this.handlePriceChange}\r\n                                />\r\n                                <label className=\"form-check-label\">\r\n                                    â‚¹2001 - â‚¹5000\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    name=\"price\"\r\n                                    type=\"radio\"\r\n                                    value=\">5000\"\r\n                                    checked={this.state.price === \">5000\"}\r\n                                    onChange={this.handlePriceChange}\r\n                                />\r\n                                <label className=\"form-check-label\">\r\n                                    >â‚¹5000\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input\r\n                                    className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    name=\"price\"\r\n                                    value=\"clear\"\r\n                                    onChange={this.handlePriceChange}\r\n                                    checked={this.state.price === \"clear\"}\r\n                                />\r\n                                <label className=\"form-check-label\">\r\n                                    Clear Price Filter\r\n                                </label>\r\n                            </div>\r\n                            {/* Department filter */}\r\n                            <div className=\"form-group\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"dept\"\r\n                                    onChange={this.handleDeptChange}\r\n                                    value={this.state.dept}\r\n                                >\r\n                                    <option value=\"\" selected disabled hidden>\r\n                                        Choose Department Filter\r\n                                    </option>\r\n                                    <option value=\"clear\">\r\n                                        Clear Dept Filter\r\n                                    </option>\r\n                                    {this.state.depts.map((dept) => (\r\n                                        <option value={dept}>{dept}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                            {/* Color Filter */}\r\n                            <div className=\"form-group\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    name=\"color\"\r\n                                    onChange={this.handleColorChange}\r\n                                    value={this.state.color}\r\n                                >\r\n                                    <option value=\"\" selected disabled hidden>\r\n                                        Choose Color Filter\r\n                                    </option>\r\n                                    <option value=\"clear\">\r\n                                        Clear Color Filter\r\n                                    </option>\r\n                                    {this.state.colors.map((color) => (\r\n                                        <option value={color}>{color}</option>\r\n                                    ))}\r\n                                </select>\r\n                                {/* Clear all the applied filters */}\r\n                                {this.state.hasColorFilter ||\r\n                                this.state.hasPriceFilter ||\r\n                                this.state.hasDeptFilter ? (\r\n                                    <button\r\n                                        className=\"btn btn-sm btn-success\"\r\n                                        onClick={this.clearFilters}\r\n                                    >\r\n                                        Clear all filters\r\n                                    </button>\r\n                                ) : (\r\n                                    \" \"\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    {/* Conditionally rendering products based on applied filters*/}\r\n                    <div id=\"products-list\">\r\n                        {this.state.hasPriceFilter\r\n                            ? this.state.price.match(/\\d+/g)[1] // check if (price > 5000) is the filter selected\r\n                                ? this.state.hasDeptFilter\r\n                                    ? this.state.hasColorFilter\r\n                                        ? this.state.products //All 3 filters are applied but (priceFilter < 5000)\r\n                                              .filter(\r\n                                                  (item) =>\r\n                                                      Number(item.price) >\r\n                                                          Number(\r\n                                                              this.state.price.match(\r\n                                                                  /\\d+/g\r\n                                                              )[0]\r\n                                                          ) &&\r\n                                                      Number(item.price) <\r\n                                                          Number(\r\n                                                              this.state.price.match(\r\n                                                                  /\\d+/g\r\n                                                              )[1]\r\n                                                          ) &&\r\n                                                      item.dept ===\r\n                                                          this.state.dept &&\r\n                                                      item.color ===\r\n                                                          this.state.color\r\n                                              )\r\n                                              .map((product) => (\r\n                                                  <Product\r\n                                                      key={product._id}\r\n                                                      product={product}\r\n                                                  />\r\n                                              ))\r\n                                        : this.state.products // (priceFilter < 5000) and (Dept filter) applied\r\n                                              .filter(\r\n                                                  (item) =>\r\n                                                      Number(item.price) >\r\n                                                          Number(\r\n                                                              this.state.price.match(\r\n                                                                  /\\d+/g\r\n                                                              )[0]\r\n                                                          ) &&\r\n                                                      Number(item.price) <\r\n                                                          Number(\r\n                                                              this.state.price.match(\r\n                                                                  /\\d+/g\r\n                                                              )[1]\r\n                                                          ) &&\r\n                                                      item.dept ===\r\n                                                          this.state.dept\r\n                                              )\r\n                                              .map((product) => (\r\n                                                  <Product\r\n                                                      key={product._id}\r\n                                                      product={product}\r\n                                                  />\r\n                                              ))\r\n                                    : this.state.hasColorFilter\r\n                                    ? this.state.products // (priceFilter < 5000) and (Color filter) applied\r\n                                          .filter(\r\n                                              (item) =>\r\n                                                  Number(item.price) >\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[0]\r\n                                                      ) &&\r\n                                                  Number(item.price) <\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[1]\r\n                                                      ) &&\r\n                                                  item.color ===\r\n                                                      this.state.color\r\n                                          )\r\n                                          .map((product) => (\r\n                                              <Product\r\n                                                  key={product._id}\r\n                                                  product={product}\r\n                                              />\r\n                                          ))\r\n                                    : this.state.products // Only priceFilter is applied with (price < 5000)\r\n                                          .filter(\r\n                                              (item) =>\r\n                                                  Number(item.price) >\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[0]\r\n                                                      ) &&\r\n                                                  Number(item.price) <\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[1]\r\n                                                      )\r\n                                          )\r\n                                          .map((product) => (\r\n                                              <Product\r\n                                                  key={product._id}\r\n                                                  product={product}\r\n                                              />\r\n                                          ))\r\n                                : this.state.hasDeptFilter\r\n                                ? this.state.hasColorFilter // All 3 filters applied but with (price > 5000)\r\n                                    ? this.state.products\r\n                                          .filter(\r\n                                              (item) =>\r\n                                                  Number(item.price) >\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[0]\r\n                                                      ) &&\r\n                                                  item.dept ===\r\n                                                      this.state.dept &&\r\n                                                  item.color ===\r\n                                                      this.state.color\r\n                                          )\r\n                                          .map((product) => (\r\n                                              <Product\r\n                                                  key={product._id}\r\n                                                  product={product}\r\n                                              />\r\n                                          ))\r\n                                    : this.state.products // (PriceFilter > 5000) and (Dept filter) applied\r\n                                          .filter(\r\n                                              (item) =>\r\n                                                  Number(item.price) >\r\n                                                      Number(\r\n                                                          this.state.price.match(\r\n                                                              /\\d+/g\r\n                                                          )[0]\r\n                                                      ) &&\r\n                                                  item.dept === this.state.dept\r\n                                          )\r\n                                          .map((product) => (\r\n                                              <Product\r\n                                                  key={product._id}\r\n                                                  product={product}\r\n                                              />\r\n                                          ))\r\n                                : this.state.hasColorFilter\r\n                                ? this.state.products // (PriceFilter > 5000) and (Color Filter) applied\r\n                                      .filter(\r\n                                          (item) =>\r\n                                              Number(item.price) >\r\n                                                  Number(\r\n                                                      this.state.price.match(\r\n                                                          /\\d+/g\r\n                                                      )[0]\r\n                                                  ) &&\r\n                                              item.color === this.state.color\r\n                                      )\r\n                                      .map((product) => (\r\n                                          <Product\r\n                                              key={product._id}\r\n                                              product={product}\r\n                                          />\r\n                                      ))\r\n                                : this.state.products // only (priceFilter > 5000) is applied\r\n                                      .filter(\r\n                                          (item) =>\r\n                                              Number(item.price) >\r\n                                              Number(\r\n                                                  this.state.price.match(\r\n                                                      /\\d+/g\r\n                                                  )[0]\r\n                                              )\r\n                                      )\r\n                                      .map((product) => (\r\n                                          <Product\r\n                                              key={product._id}\r\n                                              product={product}\r\n                                          />\r\n                                      ))\r\n                            : this.state.hasDeptFilter\r\n                            ? this.state.hasColorFilter\r\n                                ? this.state.products // (Dept Filter) and (Color filter) applied\r\n                                      .filter(\r\n                                          (product) =>\r\n                                              product.dept ===\r\n                                                  this.state.dept &&\r\n                                              product.color === this.state.color\r\n                                      )\r\n                                      .map((product) => (\r\n                                          <Product\r\n                                              key={product._id}\r\n                                              product={product}\r\n                                          />\r\n                                      ))\r\n                                : this.state.products // Only Dept filter is applied\r\n                                      .filter(\r\n                                          (product) =>\r\n                                              product.dept === this.state.dept\r\n                                      )\r\n                                      .map((product) => (\r\n                                          <Product\r\n                                              key={product._id}\r\n                                              product={product}\r\n                                          />\r\n                                      ))\r\n                            : this.state.hasColorFilter\r\n                            ? this.state.products // Only Color filter is applied\r\n                                  .filter(\r\n                                      (product) =>\r\n                                          product.color === this.state.color\r\n                                  )\r\n                                  .map((product) => (\r\n                                      <Product\r\n                                          key={product._id}\r\n                                          product={product}\r\n                                      />\r\n                                  ))\r\n                            : this.state.products.map((product) => (\r\n                                  <Product // No filters applied\r\n                                      key={product._id}\r\n                                      product={product}\r\n                                  />\r\n                              ))}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div>LOADING...</div>; // Display \"LOADING...\" until products array is stored in the state\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProductList;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProductsList from \"./components/ProductsList.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={ProductsList} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}